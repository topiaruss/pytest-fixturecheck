[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pytest-fixturecheck"
version = "0.6.0"
description = "A pytest plugin to check fixture validity before test execution"
readme = "README.md"
authors = [
    {name = "Russ Ferriday"}
]
license = {text = "MIT"}
keywords = ["pytest", "testing", "fixtures", "python", "pytest-plugin", "validation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Pytest",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Testing",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.8"
dependencies = [
    "pytest>=6.0.0",
    "click>=8.0.0",
]

[project.optional-dependencies]
django = [
    "django>=3.0",
]
asyncio = [
    "pytest-asyncio>=0.21.0",
]
dev = [
    "pytest>=6.0.0",
    "ruff",
    "mypy",
    "pytest-cov",
    "pytest-asyncio>=0.21.0",
    "pre-commit",
    "bandit",
    "pyupgrade",
    "pydocstyle",
    "pylint",
    "pylint-pytest",
    "tomli",
    "tomli_w",
    "pytest-mock",
]

[project.urls]
repository = "https://github.com/topiaruss/pytest-fixturecheck"

[project.entry-points.pytest11]
fixturecheck = "pytest_fixturecheck.plugin"

[project.scripts]
fixturecheck = "pytest_fixturecheck.cli:fixturecheck"

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
]
ignore = [
    "E501",  # line too long, handled by formatter
    "E402",  # module level import not at top of file
    "F401",  # imported but unused
    "F841",  # local variable assigned but never used
    "W291",  # trailing whitespace
    "E731",  # do not assign a lambda to a variable
    "B007",  # unused loop control variable
    "B018",  # useless expression
    "B028",  # no explicit stacklevel keyword argument
    "B904",  # raise without from inside except
    "E712",  # avoid equality comparisons to True/False
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.bandit]
exclude_dirs = ["tests", ".tox", ".venv"]
skips = ["B101", "B104"]  # Skip assert warnings and hardcoded binding
