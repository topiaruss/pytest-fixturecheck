name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        tox-env: ["py"]
        include:
          - python-version: "3.13"
            tox-env: "lint"
          - python-version: "3.13"
            tox-env: "mypy"
          - python-version: "3.13"
            tox-env: "django"
          - python-version: "3.13"
            tox-env: "nodjango"

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install tox and dependencies
        run: uv tool install tox --with tox-gh-actions

      - name: Test with tox
        run: tox -e ${{ matrix.tox-env }}${{ matrix.python-version }}
        if: ${{ matrix.tox-env == 'py' }}

      - name: Run special tox environment
        run: tox -e ${{ matrix.tox-env }}
        if: ${{ matrix.tox-env != 'py' }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
        if: ${{ matrix.tox-env == 'py' }}

  build:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true

      - name: Set up Python
        run: uv python install 3.13

      - name: Run build check with tox
        run: |
          uv tool install tox
          tox -e build
